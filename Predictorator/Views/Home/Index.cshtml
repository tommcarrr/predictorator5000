@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Predictorator.Models.Fixtures.FixturesResponse

@{
    ViewData["Title"] = "Premier League Fixtures";
}

<div class="container mt-5 fixtures-container">
    <div class="text-center mb-4">
        <h3 class="fw-bold title">@ViewData["Title"]</h3>
        <hr class="my-4"/>
    </div>
    @if (Model.AutoWeek)
    {
        <div>
            @Html.ActionLink("<<", "Index", new { weekOffset = Model.CurrentWeekOffset - 1 }, new { @class = "weekJump"})
            @Html.ActionLink(">>", "Index", new { weekOffset = Model.CurrentWeekOffset + 1 }, new { @class = "weekJump"})
        </div>
    }

    <div class="accordion mb-4" id="datesAccordion">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseForm" aria-expanded="false" aria-controls="collapseForm">
                    <h4 class="mb-0">
                        @Model.FromDate.ToString("dd/MM/yyyy") - @Model.ToDate.ToString("dd/MM/yyyy")
                    </h4>
                </button>
            </h2>
            <div id="collapseForm" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#datesAccordion">
                <div class="accordion-body">
                    <form method="get">
                        <div class="form-group me-2">
                            @Html.LabelFor(m => m.FromDate, "From:")
                            @Html.TextBoxFor(m => m.FromDate, "{0:yyyy-MM-dd}", new { name = "fromDate", @class = "form-control", type = "date" })
                        </div>
                        <div class="form-group me-2">
                            @Html.LabelFor(m => m.ToDate, "To:")
                            @Html.TextBoxFor(m => m.ToDate, "{0:yyyy-MM-dd}", new { name = "toDate", @class = "form-control", type = "date" })
                        </div>
                        <button type="submit" class="btn btn-primary mt-2">Reload</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Response.Any())
    {
        var groupedFixtures = Model.Response.GroupBy(f => f.Fixture.Date.Date).OrderBy(x => x.Key);

        foreach (var group in groupedFixtures)
        {
            <div class="card mb-4 date-block">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0 date-header">@group.Key.ToString("dddd, MMMM d, yyyy")</h5>
                </div>
                <div class="card-body">
                    <div class="row fixture-header">
                        <div class="col-4">Home Team</div>
                        <div class="col-4 text-center">Prediction</div>
                        <div class="col-4 text-end">Away Team</div>
                    </div>

                    @foreach (var fixture in group.OrderBy(x => x.Fixture.Date).ThenBy(x => x.Teams.Home.Name))
                    {
                        <div class="row align-items-center fixture-row mb-3">
                            <div class="col-4 d-flex align-items-center">
                                <img src="@fixture.Teams.Home.Logo" alt="@fixture.Teams.Home.Name" class="team-logo img-fluid me-2"/>
                                <span>@fixture.Teams.Home.Name</span>
                            </div>
                            <div class="col-4 text-center">
                                <input type="number" class="form-control score-input d-inline-block text-center" maxlength="2" @(fixture.Score?.Fulltime.Home != null ? $"readonly value={fixture.Score.Fulltime.Home}" : "") />
                                <span class="mx-2">-</span>
                                <input type="number" class="form-control score-input d-inline-block text-center" maxlength="2" @(fixture.Score?.Fulltime.Away != null ? $"readonly value={fixture.Score.Fulltime.Away}" : "") />
                            </div>
                            <div class="col-4 d-flex align-items-center justify-content-end">
                                <span>@fixture.Teams.Away.Name</span>
                                <img src="@fixture.Teams.Away.Logo" alt="@fixture.Teams.Away.Name" class="team-logo img-fluid ms-2"/>
                            </div>
                        </div>
                        <div class="row align-items-center details-row mb-2">
                            <div class="col-12 text-center">
                                @{
                                    var ukTimeZone = TimeZoneInfo.FindSystemTimeZoneById("GMT Standard Time");
                                    var ukTime = TimeZoneInfo.ConvertTime(fixture.Fixture.Date, ukTimeZone);
                                }
                                @ukTime.ToString("h:mm tt") - @fixture.Fixture.Venue.Name, @fixture.Fixture.Venue.City
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }

    <div class="buttons mt-4">
        <button id="fillRandomBtn" class="btn btn-secondary">Complete with Random Scores</button>
        <button id="clearBtn" class="btn btn-warning">Clear Predictions</button>
        <button id="copyBtn" class="btn btn-success">Copy Predictions to Clipboard</button>
    </div>
</div>